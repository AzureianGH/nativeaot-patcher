<Project>
  <PropertyGroup>
    <LangVersion>latest</LangVersion>
    <NativeLib>Static</NativeLib>
    <OutputType>Library</OutputType>
    <NoStdLib>true</NoStdLib>
    <NoConfig>true</NoConfig>
    <RuntimeMetadataVersion>v4.0.30319</RuntimeMetadataVersion>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <GenerateTargetFrameworkAttribute>false</GenerateTargetFrameworkAttribute>
    <ImplicitUsings>disable</ImplicitUsings>
    <DefaultIlcDependsOn>ResolveIlcPath</DefaultIlcDependsOn>
    <IlcDependsOn>RunPatcher;$(IlcDependsOn)</IlcDependsOn>
    <LinkTargetDependsOn>CompileWithIlc;BuildYasm;$(LinkTargetDependsOn)</LinkTargetDependsOn>
    <CoreCompileDependsOn>$(CoreCompileDependsOn);MyCustomizeReferences</CoreCompileDependsOn>
    <IlcSystemModule>Test.CoreLib</IlcSystemModule>
  </PropertyGroup>

  <UsingTask
    TaskName="GetPackageDirectory"
    AssemblyFile="$(MicrosoftNETBuildTasksAssembly)"
  />

  <!-- Resolves the path of 'ilc' to IlcToolsPath. -->
  <Target Name="ResolveIlcPath" AfterTargets="Build">
    <ItemGroup>
      <HostILCompilerPack Include="runtime.$(RuntimeIdentifier).Microsoft.DotNet.ILCompiler">
        <NuGetPackageVersion>$(BundledNETCoreAppPackageVersion)</NuGetPackageVersion>
        <NuGetPackageId>runtime.$(RuntimeIdentifier).Microsoft.DotNet.ILCompiler</NuGetPackageId>
      </HostILCompilerPack>
    </ItemGroup>

    <GetPackageDirectory
      Items="@(HostILCompilerPack)"
      PackageFolders="@(AssetsFilePackageFolder)"
    >

      <Output TaskParameter="Output" ItemName="ResolvedILCompilerPack" />
    </GetPackageDirectory>

    <PropertyGroup>
      <IlcHostPackagePath>@(ResolvedILCompilerPack->'%(PackageDirectory)')</IlcHostPackagePath>
      <IlcToolsPath Condition="$(IlcHostPackagePath) != ''" >$([MSBuild]::NormalizePath($(IlcHostPackagePath)/tools/))</IlcToolsPath>
    </PropertyGroup>
    <Message Importance="High" Text="⚙️ [ILC] Using ILCompiler from: $(IlcToolsPath)" />
  </Target>

  <!-- Writes the response file for ILC compilation. -->
  <Target Name="WriteIlcRsp" DependsOnTargets="$(IlcDependsOn)">
    <PropertyGroup>
      <FullIntermediateOutputPath>$([System.IO.Path]::GetFullPath('$(IntermediateOutputPath)'))</FullIntermediateOutputPath>
      <FullOutputPath>$([System.IO.Path]::GetFullPath('$(OutputPath)'))</FullOutputPath>

      <NativeOutputPath>$([System.IO.Path]::GetFullPath('$(OutputPath)/cosmos/native/'))</NativeOutputPath>
      <IlcIntermediateOutputPath>$(FullIntermediateOutputPath)/cosmos/native/</IlcIntermediateOutputPath>
      <FinalAssembly>$(NativeOutputPath)$(AssemblyName)</FinalAssembly>
      <IlcSystemModule Condition="$(IlcSystemModule) == ''">System.Private.CoreLib</IlcSystemModule>
    </PropertyGroup>

    <ItemGroup>
      <IlcCompileInput Include="$(FullOutputPath)/$(AssemblyName).dll" />
      <ManagedBinary Include="$(FullOutputPath)/$(AssemblyName).dll">
        <RspFile>$([System.IO.Path]::GetFullPath('$(IlcIntermediateOutputPath)$(AssemblyName).ilc.rsp'))</RspFile>
        <OutputFile>$([MSBuild]::NormalizePath('$(IlcIntermediateOutputPath)$(AssemblyName).o'))</OutputFile>
      </ManagedBinary>
    </ItemGroup>

    <MakeDir Directories="$(IlcIntermediateOutputPath)" />

    <ItemGroup>
      <IlcArg Include="@(IlcCompileInput)" />
      <IlcArg Include="-o:%(ManagedBinary.OutputFile)" />
      <IlcArg Include="@(IlcReferences->'-r:%(Identity)')" />
      <IlcArg Include="--systemmodule:$(IlcSystemModule)" />
      <IlcArg Include="--nativelib" />
      <IlcArg Include="--noinlinetls" />
      <IlcArg Include="-g" />
      <IlcArg Include="-O" />
      <IlcArg Include="--instruction-set:base,lzcnt,popcnt" />
      <IlcArg Include="--preinitstatics" /> <!-- Implied by -O, but we rely on this for Limine requests. -->
    </ItemGroup>

    <WriteLinesToFile File="%(ManagedBinary.RspFile)" Lines="@(IlcArg)" Overwrite="true" />
  </Target>

  <Target Name="CompileWithIlc" AfterTargets="Build" DependsOnTargets="WriteIlcRsp;ResolveIlcPath">
    <Message Importance="High" Text="⚙️ [ILC] Compiling: %(ManagedBinary.Identity) with RSP: %(ManagedBinary.RspFile)" />
    <Exec
      Command="&quot;$(IlcToolsPath)ilc&quot; @&quot;%(ManagedBinary.RspFile)&quot;"
      WorkingDirectory="$(FullIntermediateOutputPath)"
    />

    <Message Importance="High" Text="✅ [ILC] Output: %(ManagedBinary.OutputFile)" />
  </Target>

  <!-- The project file pretends this is .NET, but it's not .NET. Remove all assembly references the .NET SDK added. -->
  <Target Name="MyCustomizeReferences" BeforeTargets="BeforeCompile" AfterTargets="FindReferenceAssembliesForReferences">
    <ItemGroup>
      <ReferencePathWithRefAssemblies Remove="@(ReferencePathWithRefAssemblies)" Condition="%(Filename) != 'Test.CoreLib' and %(Filename) != 'Cosmos.API'" />
      <ReferencePath Remove="@(ReferencePath)" />
    </ItemGroup>
  </Target>


  <!-- The AOT compiler would want to mirror these as AppContext switches. Prevent that. -->
  <Target Name="RemoveHostConfigurationOptions" BeforeTargets="WriteIlcRspFileForCompilation" DependsOnTargets="PrepareForILLink">
    <ItemGroup>
      <RuntimeHostConfigurationOption Remove="@(RuntimeHostConfigurationOption)" />
    </ItemGroup>
  </Target>

</Project>
